{"version":3,"sources":["components/Map.js","App.js","index.js"],"names":["bounds","Map","addressCoords","useState","map","setMap","mapContainer","useRef","setBuildingInfo","useEffect","mapboxgl","accessToken","initMap","container","current","style","center","zoom","maxBounds","scale","ScaleControl","maxWidth","unit","addControl","nav","NavigationControl","intializeMap","on","resize","addSource","type","url","addLayer","id","source","layout","visibility","paint","e","console","log","features","lngLat","feat","queryRenderedFeatures","layers","Fragment","className","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAKMA,G,OAAS,CACX,CAAC,UAAU,WACX,CAAC,UAAU,YA4FAC,EAzFH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACPC,mBAAS,MADF,mBACtBC,EADsB,KACjBC,EADiB,KAEvBC,EAAeC,iBAAO,MAFC,EAGWJ,mBAAS,MAHpB,mBAGRK,GAHQ,WAiF/B,OALAC,qBAAU,YACHL,GAxEc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC9BI,IAASC,YAAc,gGAGvB,IAAMC,EAAU,IAAIF,IAAST,IAAI,CAC/BY,UAAWP,EAAaQ,QACxBC,MAAO,uDACPC,OAAQd,EACRe,KAAM,GACNC,UAAWlB,IAGPmB,EAAQ,IAAIT,IAASU,aAAa,CACtCC,SAAU,GACVC,KAAM,WAERV,EAAQW,WAAWJ,EAAO,gBAI1B,IAAMK,EAAM,IAAId,IAASe,kBACzBb,EAAQW,WAAWC,EAAK,gBAExBnB,EAAOO,GAiDKc,CAAa,CAACrB,SAAQC,iBA3C9BF,GACAA,EAAIuB,GAAG,QAAQ,WACXvB,EAAIwB,SAEJxB,EAAIyB,UAAU,WAAY,CACtBC,KAAM,SACNC,IAAK,iCAGT3B,EAAI4B,SAAS,CACTC,GAAI,iBACJH,KAAM,OACNI,OAAQ,WACR,eAfU,2BAgBVC,OAAQ,CACJC,WAAY,WAEhBC,MAAO,CACH,aAAc,UACd,eAAgB,MAIxBjC,EAAIuB,GAAG,QAAS,kBAAkB,SAACW,GAC/BC,QAAQC,IAAIF,EAAEG,SAAS,IACvBF,QAAQC,IAAIF,EAAEI,WAGlB,IAAIC,EAAOvC,EAAIwC,sBACX1C,EACA,CAAE2C,OAAQ,CAAC,oBAGfN,QAAQC,IAAIG,GAERA,GACAnC,EAAgBmC,QASzB,CAACvC,IAGJ,cAAC,IAAM0C,SAAP,UACE,qBAAKC,UAAU,eACbC,IAAK1C,OChFE2C,G,OANH,WACV,OACE,cAAC,EAAD,MCLJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b9467613.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport mapboxgl from 'mapbox-gl';\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport Container from '@material-ui/core/Container';\n\nconst bounds = [\n    [24.782813,60.128574],\n    [25.254512,60.29785]\n]\n\nconst Map = ({addressCoords}) => {\n    const [map, setMap] = useState(null);\n    const mapContainer = useRef(null);\n    const [buildingInfo, setBuildingInfo] = useState(null);\n\n  const intializeMap = ({ setMap, mapContainer }) => {\n    mapboxgl.accessToken = 'pk.eyJ1IjoidXllbnRydW9uZyIsImEiOiJjanVjcGN0b3IwaG5xNDNwZHJ3czRlNmJhIn0.u7o0VUuXY5f-rs4hcrwihA';\n\n    // Initalize map with base style\n    const initMap = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/uyentruong/ckfbjtpi45eqp19myy1pon6r3\",\n      center: addressCoords,\n      zoom: 14,\n      maxBounds: bounds\n    });\n    // Scale control\n    const scale = new mapboxgl.ScaleControl({\n      maxWidth: 80,\n      unit: 'metric'\n    });\n    initMap.addControl(scale, 'bottom-right');\n\n\n    // Add navigation control\n    const nav = new mapboxgl.NavigationControl();\n    initMap.addControl(nav, 'bottom-right');\n\n    setMap(initMap);\n  }\n\n  const addDataLayer = () => {\n    const buildingLayer = 'helsinki_building-8jfoy8'\n\n    if (map) {\n        map.on(\"load\", () => {\n            map.resize();\n\n            map.addSource('building', {\n                type: 'vector',\n                url: 'mapbox://uyentruong.8figw6eg'\n            });\n\n            map.addLayer({\n                id: 'building-basic',\n                type: 'fill',\n                source: 'building',\n                'source-layer': buildingLayer,\n                layout: {\n                    visibility: 'visible'\n                },\n                paint: {\n                    'fill-color': '#ff69b4',\n                    'fill-opacity': 0.7,\n                }\n            });\n\n            map.on('click', 'building-basic', (e) => {\n                console.log(e.features[0])\n                console.log(e.lngLat)\n            })\n\n            let feat = map.queryRenderedFeatures(\n                addressCoords,\n                { layers: ['building-basic'] }\n            );\n\n            console.log(feat);\n\n            if (feat) {\n                setBuildingInfo(feat)\n            }\n        });\n    }\n  }\n\n  useEffect(() => {\n        !map && intializeMap({setMap, mapContainer});\n        addDataLayer();\n    }, [map])\n\n  return (\n    <React.Fragment>\n      <div className=\"mapContainer\"\n        ref={mapContainer} /> \n    </React.Fragment>\n  )\n}\n\nexport default Map;","import React from 'react'\nimport Search from './components/Search'\nimport BuildingDetails from './components/BuildingDetails'\nimport Renovations from './components/Renovations';\nimport Recomendations from './components/Recomendations';\nimport Map from './components/Map'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <Map />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}